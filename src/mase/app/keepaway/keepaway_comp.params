parent.0 = ../../competitive.params
pop.subpop.0 = ec.Subpopulation
pop.subpop.0.size = 200
pop.subpop.0.species.genome-size =        102
pop.subpop.0.species.ind.input =          9
pop.subpop.0.species.ind.hidden =                     7
pop.subpop.0.species.ind.output =                     4

pop.subpop.1 = ec.Subpopulation
pop.subpop.1.size = 100
pop.subpop.1.species.genome-size =        8
pop.subpop.1.species.ind.input =          3
pop.subpop.1.species.ind.hidden =                     0
pop.subpop.1.species.ind.output =                     2

eval.base.problem =                 mase.app.keepaway.CompetitiveKeepawaySimulator
problem.trials-merge =              mean
problem.number-evals =              2
problem.eval.0 =                    mase.app.keepaway.CompetitiveKeepawayFitness
problem.eval.0.update-freq =        1
problem.eval.0.pass-length =        10
problem.eval.1 =                    mase.app.keepaway.CompetitiveKeepawayBehaviour
problem.eval.1.update-freq =        1
problem.eval.1.pass-length =        10
problem.eval.1.pass-normalization = 10

fitness.fitness-index =             0
fitness.novelty-index =             1

problem.repetitions =               1
problem.max-steps =                 500
problem.view-size =                 100
problem.ring-size =                 75
problem.discretization =            15
problem.collisions =                true
problem.ball-decay =                0.05

problem.taker-speed =               0.5
problem.takers-placement =          center
problem.placement-radius =          15

problem.ball-placement =            0

problem.n-keepers =                 3
problem.keeper.move-speed =         0.5
problem.keeper.pass-speed =         4
problem.keeper.color =              blue
# displacement = ball-speed^2 / ball-decay

# neat 
#-p pop.subpop.0=mase.neat.NEATSubpop -p pop.subpop.1=mase.neat.NEATSubpop -p pop.subpop.0.INPUT.NODES=9 -p pop.subpop.0.OUTPUT.NODES=4 -p pop.subpop.1.INPUT.NODES=3 -p pop.subpop.1.OUTPUT.NODES=2
