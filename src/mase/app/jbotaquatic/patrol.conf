--environment classname=environment.BoundaryEnvironment,
	width=116,
	height=116,
	distance=33,
	steps=1500
--controllers classname=controllers.DroneNeuralNetworkController,
	network=(
		classname=commoninterface.neuralnetwork.CINEATNetwork,
		hiddennodes=5,
		inputs=(
			GeoFence=(
				classname=commoninterface.neuralnetwork.inputs.GenericCINNInput,
				id=1
			),
			InsideBoundary=(
				classname=commoninterface.neuralnetwork.inputs.GenericCINNInput,
				id=2
			),
			Drone=(
				classname=commoninterface.neuralnetwork.inputs.GenericCINNInput,
				id=3
			)
		),
		outputs=(
			Propellers=(
				classname=commoninterface.neuralnetwork.outputs.PropellersCINNOutput,
				forwardonly=1,
				id=1
			),
			Stop=(
				classname=commoninterface.neuralnetwork.outputs.StopCINNOutput,
				id=2
			)
		)
	)
--simulator network=(
		classname=network.SimulationNetwork
	)
--robots classname=simulation.robot.AquaticDrone,
	gpserror=1.0,
	compasserror=5,
	distancewheels=0.2,
	variablenumber=0,
	numberofrobots=10,
	radius=0.30,
	diameter=0.60,
	maxspeed=0.3,
	commrange=16.6,
	sensors=(
		CISensorWrapper_1=(
			classname=simulation.robot.CISensorWrapper,
			ci=(
				classname=commoninterface.sensors.GeoFenceCISensor,
				id=1,
				range=16.6,
				numbersensors=4
			),
			id=1
		),
		CISensorWrapper_2=(
			classname=simulation.robot.CISensorWrapper,
			ci=(
				classname=commoninterface.sensors.InsideBoundaryCISensor,
				id=2
			),
			id=2
		),
		CISensorWrapper_3=(
			classname=simulation.robot.CISensorWrapper,
			ci=(
				classname=commoninterface.sensors.DroneCISensor,
				id=3,
				range=16.6,
				numbersensors=4
			),
			id=3
		)
	)