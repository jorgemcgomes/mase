eval.base.problem =                mase.app.herding.HerdingSimulator
problem.number-evals =             1
problem.trials-merge =             best
problem.eval.0 =                   mase.app.herding.HerdingFitnessBootstrap
problem.eval.0.update-freq =       1
#problem.eval.1 =                   mase.app.herding.HerdingGroupEval
#problem.eval.1.update-freq =       1
#problem.eval.1 =                   mase.app.herding.HerdingIndividualEval
#problem.eval.1.update-freq =       1

#problem.eval.3 =                    mase.generic.ASAgentEvaluator
#problem.eval.3.update-freq =        1
#problem.eval.3.windows =            1

#problem.eval.3 =                   mase.generic.SCAgentEvaluator
#problem.eval.3.update-freq =       1
#problem.eval.3.filter =            0.01
#problem.eval.3.discretisation =    3
#stat.child.15 =                    mase.generic.SCStat
#stat.child.15.file =               $generic.stat          

fitness.fitness-index =            0

problem.repetitions =              1
problem.seed =                     0
problem.max-steps =                500

problem.arenaSize = 150
problem.gateSize = 25
problem.discretization = 25

problem.agentRadius = 2.5
problem.herdingRange = 5

problem.numSheeps = 1
problem.activeSheep = false
problem.sheepSpeed = 1
problem.randomSheepPosition = false
problem.sheepX = 0.1

problem.numFoxes = 1
problem.smartFox = true
problem.foxSpeed = 1
problem.randomFoxPosition = false
problem.foxX = 0.9

problem.numShepherds = 5
problem.shepherdLinearSpeed = 1
problem.shepherdTurnSpeed = 0.4
problem.shepherdSensorRange = 25
problem.shepherdArcSensor = false
problem.shepherdSeparation = 7
problem.shepherdX = 0.5

# Subpops can vary, result would be meaningless
stat.child.0.do-subpops = false
stat.child.1.do-subpops = false
# No post-evaluation needed
stat.child.8 = ec.Statistics

eval.max-evaluations = 125000
generations = 1250

pop.subpops =           5
neat.size =             100
neat.INPUT.NODES =      10
neat.OUTPUT.NODES =     2 